{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, createContext, useState } from 'react';\nimport { BrowserRouter, Routes, Route, Outlet, Navigate, useLocation } from 'react-router-dom';\nimport Main from './components/main/Main.jsx';\nimport CreateOrder from './components/createorder/CreateOrder.jsx';\nimport Admin from './components/admin/Admin.jsx';\nimport { checkAdmin } from './api/admin.js';\nimport Orders from './components/orders/Orders.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContextType = {\n  isAuthenticated: false,\n  setAuth: () => {}\n};\n\n// const AdminContextType = {\n//   isAdmin: false,\n//   setAdmin: () => {}\n// };\n\nexport const AuthContext = /*#__PURE__*/createContext(AuthContextType);\n// export const AdminContext = createContext(AdminContextType);\n_c = AuthContext;\nfunction App() {\n  _s();\n  let isUser = false;\n  if (localStorage.getItem(\"token\")) {\n    isUser = true;\n  }\n  const [isAuthenticated, setAuth] = useState(isUser);\n  // const { isAuthenticated, setAuth } = useContext(AuthContext)\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isAuthenticated,\n        setAuth\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(PrivateRoute, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/orders\",\n            element: /*#__PURE__*/_jsxDEV(Orders, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin\",\n            element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n// const AdminRoute = () => {\n//   const location = useLocation();\n//   const { isAdmin, setAdmin } = useContext(AdminContext);\n//   const CheckAdmin = checkAdmin(localStorage.getItem(\"token\"));\n\n//   CheckAdmin.then((result) => {\n//         setAdmin(result)\n//   })\n\n//   return (\n//     isAdmin === true ?\n//       <Outlet />\n//       :\n//       <Navigate to=\"/\" state={{ from: location }} replace />\n//   );  \n// }\n_s(App, \"ovChxUeV33TyEn1iN4YEVqTSlbY=\");\n_c2 = App;\nconst PrivateRoute = () => {\n  _s2();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const location = useLocation();\n  return isAuthenticated === true ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n_s2(PrivateRoute, \"4h/nou54C+bmB/Hoc0dnwsqyK84=\", false, function () {\n  return [useLocation];\n});\n_c3 = PrivateRoute;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","createContext","useState","BrowserRouter","Routes","Route","Outlet","Navigate","useLocation","Main","CreateOrder","Admin","checkAdmin","Orders","jsxDEV","_jsxDEV","AuthContextType","isAuthenticated","setAuth","AuthContext","_c","App","_s","isUser","localStorage","getItem","children","Provider","value","path","element","fileName","_jsxFileName","lineNumber","columnNumber","PrivateRoute","_c2","_s2","location","to","state","from","replace","_c3","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, {useContext, createContext, useState} from 'react';\nimport { BrowserRouter, Routes, Route, Outlet, Navigate, useLocation } from 'react-router-dom';\nimport Main from './components/main/Main.jsx';\nimport CreateOrder from './components/createorder/CreateOrder.jsx';\nimport Admin from './components/admin/Admin.jsx';\nimport { checkAdmin } from './api/admin.js';\nimport Orders from './components/orders/Orders.jsx';\n\nconst AuthContextType = {\n  isAuthenticated: false,\n  setAuth: () => {}\n};\n\n// const AdminContextType = {\n//   isAdmin: false,\n//   setAdmin: () => {}\n// };\n\nexport const AuthContext = createContext(AuthContextType);\n// export const AdminContext = createContext(AdminContextType);\n\nfunction App() {\n\n  let isUser = false\n\n  if (localStorage.getItem(\"token\")) {\n    isUser = true\n  }\n\n  const [isAuthenticated, setAuth] = useState(isUser)\n  // const { isAuthenticated, setAuth } = useContext(AuthContext)\n  \n  \n\n  return (\n    <BrowserRouter>\n      <AuthContext.Provider value={{ isAuthenticated, setAuth }}>\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route element={<PrivateRoute />}>\n            <Route path='/orders' element={<Orders />} />\n            <Route path='/admin' element={<Admin />} />\n          </Route>\n          {/* <Route element={<AdminRoute />}> */}\n              \n          {/* </Route> */}\n        </Routes>\n      </AuthContext.Provider>\n    </BrowserRouter>\n\n  );\n}\n\n// const AdminRoute = () => {\n//   const location = useLocation();\n//   const { isAdmin, setAdmin } = useContext(AdminContext);\n//   const CheckAdmin = checkAdmin(localStorage.getItem(\"token\"));\n\n//   CheckAdmin.then((result) => {\n//         setAdmin(result)\n//   })\n\n//   return (\n//     isAdmin === true ?\n//       <Outlet />\n//       :\n//       <Navigate to=\"/\" state={{ from: location }} replace />\n//   );  \n// }\n\n\nconst PrivateRoute = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n  const location = useLocation();\n\n  return (\n    isAuthenticated === true ?\n      <Outlet />\n      :\n      <Navigate to=\"/\" state={{ from: location }} replace />\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}