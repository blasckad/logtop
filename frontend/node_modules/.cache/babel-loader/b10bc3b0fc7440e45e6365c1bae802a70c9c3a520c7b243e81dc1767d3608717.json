{"ast":null,"code":"import { request } from \"request.js\";\nexport const singup = async (email, password, name, telegram, code) => {\n  // const formData = new FormData();\n\n  // formData.append('email', email);\n  // formData.append('password', password);\n\n  const formData = {\n    \"email\": email,\n    \"password\": password,\n    \"name\": name,\n    \"telegram\": telegram,\n    \"code\": code\n  };\n  const path = '/api/singup';\n  return request(path, formData);\n\n  // const request = new Request('/api/singup', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const confirm = async email => {\n  const formData = {\n    \"email\": email\n  };\n  const request = new Request('/api/confirmsingup', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  });\n  const response = await fetch(request);\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n  return data;\n};\nexport const login = async (email, password) => {\n  const formData = {\n    \"email\": email,\n    \"password\": password\n  };\n  const request = new Request('/api/login', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  });\n  const response = await fetch(request);\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n  return data;\n};\nexport const token = async token => {\n  const formData = {\n    \"token\": token\n  };\n  const request = new Request('/api/token', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(formData)\n  });\n  const response = await fetch(request);\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n  return data;\n};","map":{"version":3,"names":["request","singup","email","password","name","telegram","code","formData","path","confirm","Request","method","headers","body","JSON","stringify","response","fetch","status","Error","data","json","detail","login","token"],"sources":["/app/src/api/auth.js"],"sourcesContent":["import { request } from \"request.js\";\n\nexport const singup = async (email, password, name, telegram, code) => {\n\n  // const formData = new FormData();\n\n  // formData.append('email', email);\n  // formData.append('password', password);\n\n  const formData = {\"email\": email, \"password\": password, \"name\": name, \"telegram\": telegram, \"code\": code}\n  \n  const path = '/api/singup'\n\n  return request(path, formData)\n\n  // const request = new Request('/api/singup', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const confirm = async (email) => {\n  const formData = {\"email\": email}\n  \n\n  const request = new Request('/api/confirmsingup', {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(formData),\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  return data;\n}\n\n\nexport const login = async (email, password) => {\n\n  const formData = {\"email\": email, \"password\": password}\n  \n\n  const request = new Request('/api/login', {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(formData),\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  return data;\n};\n\nexport const token = async (token) => {\n\n  const formData = {\"token\": token}\n\n  const request = new Request('/api/token', {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(formData),\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  return data;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}