{"ast":null,"code":"var _jsxFileName = \"/app/src/components/admin/Admin.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport CreateServices from './services/CreateServices';\nimport UpdateServices from './services/UpdateServices';\nimport { checkAdmin } from '../../api/admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  const CheckAdmin = checkAdmin(localStorage.getItem(\"token\"));\n  let isAdmin = false;\n  CheckAdmin.then(result => {\n    if (result === \"true\") {\n      isAdmin = true;\n    }\n  });\n  if (isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(UpdateServices, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateServices, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else {\n    /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n};\n_c = Admin;\nexport default Admin;\n\n// const Redirect = () => {\n//     const isAdmin = useContext(AuthContext);\n//     const location = useLocation();\n\n//     return (\n//         isAdmin === true ?\n//         <Outlet />\n//         :\n//         <Navigate to=\"/\" state={{ from: location }} replace />\n//     );\n// }\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","Navigate","useLocation","CreateServices","UpdateServices","checkAdmin","jsxDEV","_jsxDEV","Admin","CheckAdmin","localStorage","getItem","isAdmin","then","result","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/app/src/components/admin/Admin.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport CreateServices from './services/CreateServices';\nimport UpdateServices from './services/UpdateServices';\nimport { checkAdmin } from '../../api/admin';\n\nconst Admin = () => {\n    const CheckAdmin = checkAdmin(localStorage.getItem(\"token\"))\n\n    let isAdmin = false\n\n    CheckAdmin.then((result) => {\n        if (result === \"true\") {\n            isAdmin = true\n        }\n    })\n\n    if (isAdmin) {\n        return (\n            <div>\n                <UpdateServices/>\n                <CreateServices/>\n            </div>\n          );\n    } else {\n        <Navigate to=\"/\" replace />\n    }\n\n};\nexport default Admin;\n\n// const Redirect = () => {\n//     const isAdmin = useContext(AuthContext);\n//     const location = useLocation();\n  \n//     return (\n//         isAdmin === true ?\n//         <Outlet />\n//         :\n//         <Navigate to=\"/\" state={{ from: location }} replace />\n//     );\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,UAAU,GAAGJ,UAAU,CAACK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAE5D,IAAIC,OAAO,GAAG,KAAK;EAEnBH,UAAU,CAACI,IAAI,CAAEC,MAAM,IAAK;IACxB,IAAIA,MAAM,KAAK,MAAM,EAAE;MACnBF,OAAO,GAAG,IAAI;IAClB;EACJ,CAAC,CAAC;EAEF,IAAIA,OAAO,EAAE;IACT,oBACIL,OAAA;MAAAQ,QAAA,gBACIR,OAAA,CAACH,cAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjBZ,OAAA,CAACJ,cAAc;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAEd,CAAC,MAAM;IACH,aAAAZ,OAAA,CAACN,QAAQ;MAACmB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/B;AAEJ,CAAC;AAACG,EAAA,GAtBId,KAAK;AAuBX,eAAeA,KAAK;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}