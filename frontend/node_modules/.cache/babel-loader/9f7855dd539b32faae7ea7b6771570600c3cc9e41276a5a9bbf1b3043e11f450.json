{"ast":null,"code":"import { request } from \"./request.js\";\nexport const singup = async (email, password, name, telegram, code) => {\n  // const formData = new FormData();\n\n  // formData.append('email', email);\n  // formData.append('password', password);\n\n  const formData = {\n    \"email\": email,\n    \"password\": password,\n    \"name\": name,\n    \"telegram\": telegram,\n    \"code\": code\n  };\n  const path = '/api/singup';\n  return request(path, formData);\n\n  // const request = new Request('/api/singup', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const confirm = async email => {\n  const formData = {\n    \"email\": email\n  };\n  const path = '/api/confirmsingup';\n  return request(path, formData);\n\n  // const request = new Request('/api/confirmsingup', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const login = async (email, password) => {\n  const formData = {\n    \"email\": email,\n    \"password\": password\n  };\n  const path = '/api/login';\n  return request(path, formData);\n\n  // const request = new Request('/api/login', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const token = async token => {\n  const formData = {\n    \"token\": token\n  };\n  const path = '/api/token';\n  return request(path, formData);\n\n  // const request = new Request('/api/token', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};","map":{"version":3,"names":["request","singup","email","password","name","telegram","code","formData","path","confirm","login","token"],"sources":["/app/src/api/auth.js"],"sourcesContent":["import { request } from \"./request.js\";\n\nexport const singup = async (email, password, name, telegram, code) => {\n\n  // const formData = new FormData();\n\n  // formData.append('email', email);\n  // formData.append('password', password);\n\n  const formData = {\"email\": email, \"password\": password, \"name\": name, \"telegram\": telegram, \"code\": code};\n  \n  const path = '/api/singup';\n\n  return request(path, formData)\n\n  // const request = new Request('/api/singup', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const confirm = async (email) => {\n  const formData = {\"email\": email};\n  const path = '/api/confirmsingup';\n  return request(path, formData)\n  \n\n  // const request = new Request('/api/confirmsingup', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n}\n\n\nexport const login = async (email, password) => {\n\n  const formData = {\"email\": email, \"password\": password}\n  const path = '/api/login';\n  return request(path, formData)\n  \n\n  // const request = new Request('/api/login', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};\n\nexport const token = async (token) => {\n\n  const formData = {\"token\": token}\n  const path = '/api/token'\n  return request(path, formData)\n\n  // const request = new Request('/api/token', {\n  //   method: 'POST',\n  //   headers: { \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify(formData),\n  // });\n\n  // const response = await fetch(request);\n\n  // if (response.status === 500) {\n  //   throw new Error('Internal server error');\n  // }\n\n  // const data = await response.json();\n\n  // if (response.status > 400 && response.status < 500) {\n  //   if (data.detail) {\n  //     throw data.detail;\n  //   }\n  //   throw data;\n  // }\n\n  // return data;\n};"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AAEtC,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EAErE;;EAEA;EACA;;EAEA,MAAMC,QAAQ,GAAG;IAAC,OAAO,EAAEL,KAAK;IAAE,UAAU,EAAEC,QAAQ;IAAE,MAAM,EAAEC,IAAI;IAAE,UAAU,EAAEC,QAAQ;IAAE,MAAM,EAAEC;EAAI,CAAC;EAEzG,MAAME,IAAI,GAAG,aAAa;EAE1B,OAAOR,OAAO,CAACQ,IAAI,EAAED,QAAQ,CAAC;;EAE9B;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC;;AAED,OAAO,MAAME,OAAO,GAAG,MAAOP,KAAK,IAAK;EACtC,MAAMK,QAAQ,GAAG;IAAC,OAAO,EAAEL;EAAK,CAAC;EACjC,MAAMM,IAAI,GAAG,oBAAoB;EACjC,OAAOR,OAAO,CAACQ,IAAI,EAAED,QAAQ,CAAC;;EAG9B;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC;;AAGD,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOR,KAAK,EAAEC,QAAQ,KAAK;EAE9C,MAAMI,QAAQ,GAAG;IAAC,OAAO,EAAEL,KAAK;IAAE,UAAU,EAAEC;EAAQ,CAAC;EACvD,MAAMK,IAAI,GAAG,YAAY;EACzB,OAAOR,OAAO,CAACQ,IAAI,EAAED,QAAQ,CAAC;;EAG9B;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC;;AAED,OAAO,MAAMI,KAAK,GAAG,MAAOA,KAAK,IAAK;EAEpC,MAAMJ,QAAQ,GAAG;IAAC,OAAO,EAAEI;EAAK,CAAC;EACjC,MAAMH,IAAI,GAAG,YAAY;EACzB,OAAOR,OAAO,CAACQ,IAAI,EAAED,QAAQ,CAAC;;EAE9B;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}