{"ast":null,"code":"var _jsxFileName = \"/app/src/components/admin/Admin.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport CreateServices from './services/CreateServices';\nimport UpdateServices from './services/UpdateServices';\nimport { checkAdmin } from '../../api/admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  const isAdmin = checkAdmin(localStorage.getItem(\"token\"));\n  isAdmin.then(result => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UpdateServices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreateServices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Admin;\nexport default Admin;\n\n// const Redirect = () => {\n//     const isAdmin = useContext(AuthContext);\n//     const location = useLocation();\n\n//     return (\n//         isAdmin === true ?\n//         <Outlet />\n//         :\n//         <Navigate to=\"/\" state={{ from: location }} replace />\n//     );\n// }\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","Navigate","useLocation","CreateServices","UpdateServices","checkAdmin","jsxDEV","_jsxDEV","Admin","isAdmin","localStorage","getItem","then","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/admin/Admin.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport CreateServices from './services/CreateServices';\nimport UpdateServices from './services/UpdateServices';\nimport { checkAdmin } from '../../api/admin';\n\nconst Admin = () => {\n    const isAdmin = checkAdmin(localStorage.getItem(\"token\"))\n\n    isAdmin.then((result) => {\n\n    })\n\n  return (\n    <div>\n        <UpdateServices/>\n        <CreateServices/>\n    </div>\n  );\n};\nexport default Admin;\n\n// const Redirect = () => {\n//     const isAdmin = useContext(AuthContext);\n//     const location = useLocation();\n  \n//     return (\n//         isAdmin === true ?\n//         <Outlet />\n//         :\n//         <Navigate to=\"/\" state={{ from: location }} replace />\n//     );\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAGJ,UAAU,CAACK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEzDF,OAAO,CAACG,IAAI,CAAEC,MAAM,IAAK,CAEzB,CAAC,CAAC;EAEJ,oBACEN,OAAA;IAAAO,QAAA,gBACIP,OAAA,CAACH,cAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjBX,OAAA,CAACJ,cAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACC,EAAA,GAbIX,KAAK;AAcX,eAAeA,KAAK;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}