{"ast":null,"code":"var _jsxFileName = \"/app/src/components/admin/Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport CreateServices from './services/CreateServices';\nimport UpdateServices from './services/UpdateServices';\nimport { checkAdmin } from '../../api/admin';\nimport { AdminContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const {\n    isAdmin,\n    setAdmin\n  } = useContext(AdminContext);\n  if (isAdmin) {\n    if (isAdmin === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(UpdateServices, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CreateServices, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    } else {\n      /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  // const CheckAdmin = checkAdmin(localStorage.getItem(\"token\"))\n  // let isAdmin = false\n\n  // CheckAdmin.then((result) => {\n  //     if (result === true) {\n  //         isAdmin = true\n  //     }\n  // })\n\n  // return (\n  //     <div>\n  //         <UpdateServices/>\n  //         <CreateServices/>\n  //     </div>\n  // )\n\n  // if (isAdmin === true) {\n  //     return (\n  //         <div>\n  //             <UpdateServices/>\n  //             <CreateServices/>\n  //         </div>\n  //       )\n  // } else {\n  //     <Navigate to=\"/\" replace />\n  // }\n};\n_s(Admin, \"mnSKjGVy35yo9v6QPYXXD9FSLB8=\");\n_c = Admin;\nexport default Admin;\n\n// const Redirect = () => {\n//     const isAdmin = useContext(AuthContext);\n//     const location = useLocation();\n\n//     return (\n//         isAdmin === true ?\n//         <Outlet />\n//         :\n//         <Navigate to=\"/\" state={{ from: location }} replace />\n//     );\n// }\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Outlet","Navigate","useLocation","CreateServices","UpdateServices","checkAdmin","AdminContext","jsxDEV","_jsxDEV","Admin","_s","isAdmin","setAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/app/src/components/admin/Admin.jsx"],"sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { Outlet, Navigate, useLocation } from 'react-router-dom';\nimport CreateServices from './services/CreateServices';\nimport UpdateServices from './services/UpdateServices';\nimport { checkAdmin } from '../../api/admin';\nimport { AdminContext } from '../../App';\n\nconst Admin = () => {\n\n    const {isAdmin, setAdmin} = useContext(AdminContext)\n\n    if (isAdmin) {\n        if (isAdmin === true) {\n            return (\n                <div>\n                    <UpdateServices/>\n                    <CreateServices/>\n                </div>\n            )\n        } else {\n            <Navigate to=\"/\" replace />\n        }\n    }\n\n    \n\n    // const CheckAdmin = checkAdmin(localStorage.getItem(\"token\"))\n    // let isAdmin = false\n\n    // CheckAdmin.then((result) => {\n    //     if (result === true) {\n    //         isAdmin = true\n    //     }\n    // })\n\n    // return (\n    //     <div>\n    //         <UpdateServices/>\n    //         <CreateServices/>\n    //     </div>\n    // )\n\n    // if (isAdmin === true) {\n    //     return (\n    //         <div>\n    //             <UpdateServices/>\n    //             <CreateServices/>\n    //         </div>\n    //       )\n    // } else {\n    //     <Navigate to=\"/\" replace />\n    // }\n\n};\nexport default Admin;\n\n// const Redirect = () => {\n//     const isAdmin = useContext(AuthContext);\n//     const location = useLocation();\n  \n//     return (\n//         isAdmin === true ?\n//         <Outlet />\n//         :\n//         <Navigate to=\"/\" state={{ from: location }} replace />\n//     );\n// }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAC5D,SAASC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM;IAACC,OAAO;IAAEC;EAAQ,CAAC,GAAGb,UAAU,CAACO,YAAY,CAAC;EAEpD,IAAIK,OAAO,EAAE;IACT,IAAIA,OAAO,KAAK,IAAI,EAAE;MAClB,oBACIH,OAAA;QAAAK,QAAA,gBACIL,OAAA,CAACJ,cAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjBT,OAAA,CAACL,cAAc;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAEd,CAAC,MAAM;MACH,aAAAT,OAAA,CAACP,QAAQ;QAACiB,EAAE,EAAC,GAAG;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC/B;EACJ;;EAIA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ,CAAC;AAACP,EAAA,CA9CID,KAAK;AAAAW,EAAA,GAALX,KAAK;AA+CX,eAAeA,KAAK;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}