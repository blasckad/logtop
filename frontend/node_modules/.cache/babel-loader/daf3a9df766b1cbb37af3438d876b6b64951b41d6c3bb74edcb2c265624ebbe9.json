{"ast":null,"code":"var _jsxFileName = \"/app/src/components/createorder/CreateOrder.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import {useForm} from 'react-hook-form'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateOrder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [ServicesData, setServicesData] = useState();\n  // const [Order, setOrder] = useState();\n  let Order = {};\n  const [Cost, setCost] = useState(\"0\");\n  useEffect(() => {\n    fetch(\"/api/servicesdata\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => {\n      setServicesData(data);\n    }).catch(error => console.log(error));\n  }, []);\n\n  // console.log(ServicesData)\n\n  const handleChange = event => {\n    Order[event.target.id] = event.target.value;\n  };\n  function OrderList() {\n    if (ServicesData) {\n      // ServicesData.map((superType) => \n      //     superType[\"data\"].map((type) =>\n      //         type[\"data\"].map((service) =>\n      //             // Order.push({\"super_type\": superType[\"super_type_id\"], \"type\": type[\"type_id\"], \"services\": service[\"id\"], \"count\": service[\"count\"]})\n      //             Order[service[\"id\"]] = \"0\"\n\n      //         )\n      //     )\n      // )\n\n      const list = ServicesData.map(superType => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: superType[\"super_type\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: superType[\"data\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: type[\"type\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: type[\"data\"].map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: service[\"name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u0446\\u0435\\u043D\\u0430: \", service[\"cost\"]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: service[\"id\"],\n                  type: \"text\",\n                  value: service[\"count\"],\n                  onChange: count => service[\"count\"] = count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this));\n      return list;\n    }\n  }\n  function SendOrder() {}\n  function useInput({\n    type /*...*/\n  }) {\n    _s();\n    const [value, setValue] = useState(\"\");\n    const input = /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: e => setValue(e.target.value),\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this);\n    return [value, input];\n  }\n  _s(useInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(OrderList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u0441\\u0443\\u043C\\u043C\\u0430: \", Cost]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: Cost,\n      onChange: c => setCost(c)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SendOrder,\n      children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(CreateOrder, \"RsBZCFnP0Elf4lqxOvdFELVD7N4=\");\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateOrder","_s2","_s","$RefreshSig$","ServicesData","setServicesData","Order","Cost","setCost","fetch","method","then","response","json","data","catch","error","console","log","handleChange","event","target","id","value","OrderList","list","map","superType","children","fileName","_jsxFileName","lineNumber","columnNumber","type","service","onChange","count","SendOrder","useInput","setValue","input","e","c","onClick","_c","$RefreshReg$"],"sources":["/app/src/components/createorder/CreateOrder.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n// import {useForm} from 'react-hook-form'\n\nconst CreateOrder = () => {\n\n    const [ServicesData, setServicesData] = useState();\n    // const [Order, setOrder] = useState();\n    let Order ={}\n    const [Cost, setCost] = useState(\"0\");\n\n    useEffect(() => {\n        fetch(\"/api/servicesdata\", {\n            method: \"GET\",\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            setServicesData(data);\n        })\n        .catch((error) => console.log(error));\n    }, []);\n\n    // console.log(ServicesData)\n\n    const handleChange = event => {\n        Order[event.target.id] = event.target.value;\n    };\n\n    function OrderList() {\n        if (ServicesData) {\n            // ServicesData.map((superType) => \n            //     superType[\"data\"].map((type) =>\n            //         type[\"data\"].map((service) =>\n            //             // Order.push({\"super_type\": superType[\"super_type_id\"], \"type\": type[\"type_id\"], \"services\": service[\"id\"], \"count\": service[\"count\"]})\n            //             Order[service[\"id\"]] = \"0\"\n\n            //         )\n            //     )\n            // )\n\n            const list = ServicesData.map((superType) => \n            <div>\n                <div>{superType[\"super_type\"]}</div>\n\n                <div>\n                    {superType[\"data\"].map((type) =>\n                        <div>\n                            <div>{type[\"type\"]}</div>\n\n                            <div>{type[\"data\"].map((service) =>\n                                <div>\n                                    <div>{service[\"name\"]}</div> \n                                    <div>цена: {service[\"cost\"]}</div>\n                                    <input id={service[\"id\"]} type=\"text\" value={service[\"count\"]} onChange={(count) => service[\"count\"] = count}></input>\n                                </div>\n                            )}</div>\n                        </div>\n                                 \n                    )}\n                </div>\n            </div> \n            );\n            return list\n        }\n        \n    }\n\n    function SendOrder() {\n\n    }\n\n    function useInput({ type /*...*/ }) {\n        const [value, setValue] = useState(\"\");\n        const input = <input value={value} onChange={e => setValue(e.target.value)} type={type} />;\n        return [value, input];\n    }\n\n  return (\n    <form>\n        <OrderList/>\n        <div>сумма: {Cost}</div>\n        <input type=\"text\" value={Cost} onChange={(c) => setCost(c)}/>\n        <button onClick={SendOrder}>Сделать заказ</button>\n    </form>\n  );\n};\nexport default CreateOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}