{"ast":null,"code":"var _jsxFileName = \"/app/src/components/createorder/CreateOrder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateOrder = () => {\n  _s();\n  const [ServicesData, setServicesData] = useState();\n  // let ServicesData\n  const [Order, setOrder] = useState({});\n  const [Sum, setSum] = useState({});\n  useEffect(() => {\n    fetch(\"/api/servicesdata\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => {\n      setServicesData(data);\n    }).catch(error => console.log(error));\n  }, []);\n\n  //  function changeCount(event) {\n  //     setOrder(Order => ({...Order, [event.target.id]: event.target.value}))\n\n  //     setSum(Sum => ({...Sum,[event.target.id]: event.target.value * event.target.name}))\n  //  }\n\n  const changeCount = (e, id, type, superType, cost) => {\n    var result = [...ServicesData]; //<- copy roomRent into result\n    result = result.map(Super => {\n      //<- use map on result to find element to update using id\n      if (Super.super_type_id === superType) Super.map(Type => {\n        if (Type.type_id === type) type.map(s => {\n          if (s.id === id) s.count = e.target.value;\n          return s;\n        });\n      });\n    });\n    setRoomRent(result);\n\n    // setSum(Sum => ({...Sum,[event.target.id]: event.target.value * event.target.name}))\n  };\n\n  function OrderList() {\n    if (ServicesData) {\n      console.log(\"Render List\");\n      const List = ServicesData.map(superType => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: superType[\"super_type\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: superType[\"data\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: type[\"type\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: type[\"data\"].map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: service[\"name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"\\u0446\\u0435\\u043D\\u0430: \", service[\"cost\"]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: service.count,\n                  onChange: e => changeCount(e, service.id, type.type_id, superType.super_type_id, service.cost),\n                  placeholder: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, service[\"id\"], true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, type[\"type_id\"], true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, superType[\"super_type_id\"], true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this));\n      return List;\n    }\n  }\n  function SendOrder() {\n    console.log(Order);\n  }\n  function CalcSum() {\n    let summa = 0;\n    for (const [key, value] of Object.entries(Sum)) {\n      summa += value;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: summa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(OrderList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CalcSum, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: SendOrder,\n      children: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateOrder, \"BJ+WEADt197Mn/RdZT0DML2k6QM=\");\n_c = CreateOrder;\nexport default CreateOrder;\nvar _c;\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateOrder","_s","ServicesData","setServicesData","Order","setOrder","Sum","setSum","fetch","method","then","response","json","data","catch","error","console","log","changeCount","e","id","type","superType","cost","result","map","Super","super_type_id","Type","type_id","s","count","target","value","setRoomRent","OrderList","List","children","fileName","_jsxFileName","lineNumber","columnNumber","service","onChange","placeholder","SendOrder","CalcSum","summa","key","Object","entries","onClick","_c","$RefreshReg$"],"sources":["/app/src/components/createorder/CreateOrder.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst CreateOrder = () => {\n\n    const [ServicesData, setServicesData] = useState();\n    // let ServicesData\n    const [Order, setOrder] = useState({});\n    const [Sum, setSum] = useState({});\n\n    useEffect(() => {\n        fetch(\"/api/servicesdata\", {\n            method: \"GET\",\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            setServicesData(data)\n        })\n        .catch((error) => console.log(error));\n    }, []);\n\n    //  function changeCount(event) {\n    //     setOrder(Order => ({...Order, [event.target.id]: event.target.value}))\n\n    //     setSum(Sum => ({...Sum,[event.target.id]: event.target.value * event.target.name}))\n    //  }\n\n     const changeCount = (e, id, type, superType, cost) => {\n        var result = [...ServicesData]; //<- copy roomRent into result\n        result = result.map((Super) => { //<- use map on result to find element to update using id\n        if (Super.super_type_id === superType) Super.map((Type) => {\n                if (Type.type_id === type) type.map((s) => {\n                    if (s.id === id) s.count = e.target.value\n                    return s\n                })\n            });\n        });\n        setRoomRent(result);\n        \n        // setSum(Sum => ({...Sum,[event.target.id]: event.target.value * event.target.name}))\n     };\n\n    function OrderList() {\n        if (ServicesData) {\n            console.log(\"Render List\")\n\n            const List = ServicesData.map((superType) => \n            <div key={superType[\"super_type_id\"]}>\n                <div>{superType[\"super_type\"]}</div>\n\n                <div>\n                    {superType[\"data\"].map((type) =>\n                        <div key={type[\"type_id\"]}>\n                            <div>{type[\"type\"]}</div>\n\n                            <div>{type[\"data\"].map((service) =>\n                                <div key={service[\"id\"]}>\n                                    <div>{service[\"name\"]}</div> \n                                    <div>цена: {service[\"cost\"]}</div>\n                                    {/* <input\n                                    id={service[\"id\"]}\n                                    name={service[\"cost\"]}\n                                    type=\"text\"\n                                    value={Order[service[\"id\"]]}\n                                    onChange={changeCount}\n                                    placeholder=\"0\">\n                                    </input> */}\n                                    <input\n                                    type=\"text\"\n                                    value={service.count}\n                                    onChange={(e) => changeCount(e, service.id, type.type_id, superType.super_type_id, service.cost)}\n                                    placeholder=\"0\">\n                                    </input>\n                                </div>\n                            )}</div>\n                        </div>\n                                 \n                    )}\n                </div>\n            </div> \n            )\n            return List\n        }\n        \n    }\n\n    function SendOrder() {\n        console.log(Order)\n    }\n\n\n    function CalcSum() {\n        let summa = 0\n        for (const [key, value] of Object.entries(Sum)) {\n            summa += value\n        }\n\n        return <div>{summa}</div>\n    }\n\n   \n\n  return (\n    <div>\n        <OrderList/>\n        <CalcSum/>\n        <div onClick={SendOrder}>Сделать заказ</div>\n    </div>\n  );\n};\nexport default CreateOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}